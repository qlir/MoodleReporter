<Application x:Class="UIReporter.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:UIReporter.Converters"
             xmlns:reportsGenerator="clr-namespace:ReportsGenerator;assembly=ReportsGenerator"
             StartupUri="MainWindow.xaml"             >
    <Application.Resources>
        <Color x:Key="ColumnHeaderColor1">#D5D5D5</Color>
        <Color x:Key="ColumnHeaderColor2">White</Color>
        <Color x:Key="ColumnHeaderTextColor">Black</Color>
        <Color x:Key="ColumnHeaderBorderColor">Black</Color>
        <Color x:Key="GridTwoRowColor">WhiteSmoke</Color>
        
        <Color x:Key="ButtonTextColor">Black</Color>
        <Color x:Key="ButtonColor1">#D2D2D2</Color>
        <Color x:Key="ButtonColor2">White</Color>
        <Color x:Key="RemoveColor1">DarkSalmon</Color>
        <Color x:Key="RemoveColor2">DarkRed</Color>
        <Color x:Key="BaseColor">WhiteSmoke</Color>
        <Color x:Key="DialogBorderColor1">Gray</Color>
        <Color x:Key="DialogBorderColor2">Gray</Color>
        <Color x:Key="SecondRowColor">#D7D7D7</Color>
        <Color x:Key="SelectedRowColor">#960027FF</Color>
        <Color x:Key="RowErrorColor">DarkSalmon</Color>
        <Color x:Key="TextBoxBackgroundColor">White</Color>
        
        <Color x:Key="Color1">#656565</Color>
        <Color x:Key="Color2">White</Color>
        <Color x:Key="Color6">#E9E9E9</Color>
        <Color x:Key="TextColor0">Black</Color>
        <Color x:Key="TextColor1">#33315E</Color>
        <Color x:Key="TextColor3">Black</Color>

        <SolidColorBrush x:Key="Brush0"  Color="{StaticResource BaseColor}" />
        <SolidColorBrush x:Key="Brush1"  Color="{StaticResource Color1}" />
        <SolidColorBrush x:Key="BorderBrush"  Color="{StaticResource Color1}" />
        <SolidColorBrush x:Key="SecondRowBrush"  Color="{StaticResource SecondRowColor}" />
        <SolidColorBrush x:Key="TextBrush1" Color="{StaticResource TextColor1}"/>
        <SolidColorBrush x:Key="TextBrush0" Color="{StaticResource TextColor0}" />
        <SolidColorBrush x:Key="TextBrush3" Color="{StaticResource TextColor3}" />
        <SolidColorBrush x:Key="ColumnHeaderTextBrush" Color="{StaticResource ColumnHeaderTextColor}" />
        <SolidColorBrush x:Key="ColumnHeaderBorderBrush" Color="{StaticResource ColumnHeaderBorderColor}" />
        <SolidColorBrush x:Key="ButtonTextBrush" Color="{StaticResource ButtonTextColor}" />
        <SolidColorBrush x:Key="TextBoxBackgroundBrush" Color="{StaticResource TextBoxBackgroundColor}" />
        <!--<SolidColorBrush x:Key="GridTwoRowBrush" Color="{StaticResource GridTwoRowColor}" />-->

        <LinearGradientBrush x:Key="GradientBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0" SpreadMethod="Pad">
            <GradientStop Color="{StaticResource DialogBorderColor1}" Offset="0"/>
            <GradientStop Color="{StaticResource DialogBorderColor1}" Offset="1"/>
            <GradientStop Color="{StaticResource DialogBorderColor2}" Offset="0.65"/>
            <GradientStop Color="{StaticResource DialogBorderColor2}" Offset="0.35"/>
        </LinearGradientBrush>

        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <converters:ObjectDataProviderConverter x:Key="ObjectDataProviderConverter" />
        <converters:IsNewRow x:Key="IsNewRow" />
        <converters:EmptyStringToNullConverter x:Key="EmptyStringToNullConverter" />
        <converters:CuratorComboBoxTextConverter x:Key="CuratorComboBoxItemConverter" />
        <converters:CuratorComboBoxSelectionConverter x:Key="CuratorComboBoxSelectionConverter" />
        <reportsGenerator:GlobalVariables x:Key="GlobalVariables" />
        <Style x:Key="DeleteButtonStyle"  TargetType="Button">
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="Padding" Value="2"></Setter>
            <Setter Property="Foreground">
                <Setter.Value>
                    <RadialGradientBrush>
                        <GradientStop Color="{StaticResource RemoveColor1}"/>
                        <GradientStop Color="{StaticResource RemoveColor2}" Offset="1"/>
                    </RadialGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Rectangle x:Name="Cross" 
                                   Height="15" 
                                   Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"
                                   Margin="{TemplateBinding Padding}"
                                   VerticalAlignment="Stretch" 
                                   HorizontalAlignment="Stretch">
                            <Rectangle.Fill>
                                <VisualBrush>
                                    <VisualBrush.Visual>
                                        <Grid>
                                            <Line X1="0" Y1="0" X2="10" Y2="10" StrokeThickness="3" Stroke="{TemplateBinding Foreground}" />
                                            <Line X1="0" Y1="10" X2="10" Y2="0" StrokeThickness="3" Stroke="{TemplateBinding Foreground}" />
                                        </Grid>
                                    </VisualBrush.Visual>
                                </VisualBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <!-- <Image Margin="3" x:Name="img" Source="icons\cross.png" ></Image>-->

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <RadialGradientBrush>
                                            <GradientStop Color="{StaticResource RemoveColor1}"/>
                                            <GradientStop Color="{StaticResource RemoveColor2}" Offset="1.5"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Height" TargetName="Cross" Value="15"></Setter>
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <RadialGradientBrush>
                                            <GradientStop Color="{StaticResource RemoveColor1}"/>
                                            <GradientStop Color="{StaticResource RemoveColor2}" Offset="2"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <DataTrigger Binding="{Binding Converter={StaticResource IsNewRow}}" Value="True" >
                                <Setter Property="Visibility" Value="Hidden"></Setter>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}" BasedOn="{x:Null}">
            <Setter Property="Control.Foreground" Value="{StaticResource ButtonTextBrush}" />
            <Setter Property="Control.FontSize" Value="12" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="Grid">
                            <Rectangle x:Name="rectangle" Margin="1" Stroke="{StaticResource BorderBrush}"  RadiusX="5" RadiusY="10" >
                                <Rectangle.Fill>
                                    <RadialGradientBrush>
                                        <!--<GradientStop Color="#FF0C00FF" Offset="0.039"/>-->
                                        <GradientStop Color="{StaticResource ButtonColor2}" Offset="-1"/>
                                        <GradientStop Color="{StaticResource ButtonColor1}" Offset="1"/>
                                    </RadialGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="20 5" Height="16"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Control.Foreground" Value="{StaticResource TextBrush0}" />
                                <Setter Property="Control.FontSize" Value="13" />
                                <Setter Property="Fill" TargetName="rectangle">
                                    <Setter.Value>
                                        <RadialGradientBrush RadiusX="1" RadiusY="0.5">
                                            <GradientStop Color="{StaticResource ButtonColor2}" Offset="0"/>
                                            <GradientStop Color="{StaticResource ButtonColor1}" Offset="1"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Margin" Value="0" TargetName="rectangle"></Setter>
                                <!-- <Setter.Value>
                                        <RadialGradientBrush>
                                            <GradientStop Color="Black" Offset="1"/>
                                            <GradientStop Color="Gainsboro"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>-->
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="rectangle">
                                    <Setter.Value>
                                        <RadialGradientBrush RadiusX="1" RadiusY="0.5">
                                            <GradientStop Color="{StaticResource ButtonColor2}" Offset="0.5"/>
                                            <GradientStop Color="{StaticResource ButtonColor1}" Offset="1.5"/>
                                        </RadialGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Margin" Value="0" TargetName="rectangle"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Fill" Value="{StaticResource BorderBrush}" TargetName="rectangle"/>
                                <Setter Property="Control.Foreground">
                                    <Setter.Value>
                                        <SolidColorBrush Opacity="0.5" Color="{StaticResource TextColor0}" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="MenuItemControlTemplate" TargetType="MenuItem">
            <Border x:Name="Border" >
                <Grid>
                    <ContentPresenter Margin="10,3,10,3" ContentSource="Header"  RecognizesAccessKey="True" />
                    <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Fade">
                        <Border  CornerRadius="10" Name="SubmenuBorder" SnapsToDevicePixels="True" Background="{StaticResource Brush0}" BorderBrush="{StaticResource BorderBrush}" BorderThickness="4" >
                            <StackPanel  IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter TargetName="Popup" Property="PopupAnimation" Value="Slide"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="BorderThickness" Value="1"></Setter>
                    <Setter TargetName="Border" Property="BorderBrush">
                        <Setter.Value>
                            <SolidColorBrush Color="{x:Static SystemColors.HighlightColor}" />
                        </Setter.Value>
                    </Setter>
                    <Setter TargetName="Border" Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="{x:Static SystemColors.HighlightColor}" Opacity="0.2" />
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4"/>
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ErrorStyle" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DataGridRowStyle" TargetType="{x:Type DataGridRow}">
            <Setter Property="ValidationErrorTemplate" Value="{x:Null}" ></Setter>
            <Style.Triggers>
                <Trigger Property="DataGrid.AlternationIndex" Value="0">
                    <Setter Property="Background" Value="{StaticResource SecondRowBrush}"/>
                </Trigger>
                <Trigger Property="DataGrid.AlternationIndex" Value="1">
                    <!-- <Setter Property="Background" Value="#FFE0FFFE"/>-->
                </Trigger>
                <DataTrigger Binding="{Binding Converter={StaticResource IsNewRow}}" Value="True">
                    <Setter Property="Background" Value="White"/>
                </DataTrigger>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource RowErrorColor}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="IsSelected" Value="False"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DataGridCellStyle" TargetType="DataGridCell">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background">
                        <Setter.Value>
                            <SolidColorBrush Color="{StaticResource SelectedRowColor}"></SolidColorBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DataGridAppStyle" TargetType="{x:Type DataGrid}" >
            <Setter Property="Background" Value="{StaticResource Brush0}"/>
            <Setter Property="RowHeaderStyle">
                <Setter.Value>
                    <Style TargetType="DataGridRowHeader">
                        <Setter Property="Background" Value="{StaticResource Brush0}"></Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="RowStyle" Value="{StaticResource DataGridRowStyle}"></Setter>
            <Setter Property="CellStyle" Value="{StaticResource DataGridCellStyle}"></Setter>
            <Setter Property="AlternationCount" Value="2"></Setter>
        </Style>
        <Style x:Key="DataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <!--<Setter Property="Background" Value="#FFE4F4F4"></Setter>-->
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                        <GradientStop Color="{StaticResource ColumnHeaderColor1}" Offset="0"/>
                        <GradientStop Color="{StaticResource ColumnHeaderColor1}" Offset="1"/>
                        <GradientStop Color="{StaticResource ColumnHeaderColor2}" Offset="0.3"/>
                        <GradientStop Color="{StaticResource ColumnHeaderColor2}" Offset="0.7"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="{StaticResource ColumnHeaderBorderBrush}"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="Foreground" Value="{StaticResource ColumnHeaderTextBrush}" ></Setter>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
            <Setter Property="Height" Value="25"></Setter>
            <Setter Property="Margin" Value="0"></Setter>
        </Style>
        <Style x:Key="WindowStyle" TargetType="Window">
            <Setter Property="Background" Value="{StaticResource Brush0}"></Setter>
            <Setter Property="Foreground" Value="{StaticResource TextBrush0}"></Setter>
            <Setter Property="Icon" Value="icons/icon.png"></Setter>
        </Style>
        <Style TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{StaticResource TextBrush1}"></Setter>
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="{StaticResource TextBrush1}"></Setter>
        </Style>
        <Style x:Key="TextBoxStyle" TargetType="Control">
            <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}"></Setter>
            <Setter Property="BorderThickness" Value="3"></Setter>
            <Setter Property="BorderBrush" Value="{StaticResource GradientBorderBrush}"/>
        </Style>
    </Application.Resources>
</Application>
